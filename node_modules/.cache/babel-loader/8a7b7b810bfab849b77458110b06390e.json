{"ast":null,"code":"import axios from 'axios';\naxios.defaults.baseURL = 'http://localhost:5059';\naxios.interceptors.request.use(function (config) {\n  console.log(config);\n  return config;\n}, function (error) {\n  console.log(error);\n  return Promise.reject(error);\n});\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(`/items`);\n    return result.data;\n  },\n  addTask: async name => {\n    console.log('addTask', name);\n    const result = await axios.post(`/addTodo`, {\n      name,\n      isComplete: false\n    });\n\n    //TODO\n    return result.data;\n  },\n  // setCompleted: async(id, isComplete)=>{\n  //   console.log('setCompleted', {id, isComplete})\n  //   //TODO\n  //   await axios.put(`${apiUrl}/${id}?isComplete=${isComplete}`)\n\n  // },\n  setCompleted: async (id, isComplete) => {\n    console.log('setCompleted', {\n      id,\n      isComplete\n    });\n    const result = await axios.put(`/addTodo/${id}?isComplete=${isComplete}`, {\n      id,\n      isComplete\n    });\n    return result;\n  },\n  deleteTask: async id => {\n    console.log('deleteTask');\n    const result = await axios.delete(`/deleteTodo/${id}`, id);\n    return result.data;\n  }\n};","map":{"version":3,"names":["axios","defaults","baseURL","interceptors","request","use","config","console","log","error","Promise","reject","getTasks","result","get","data","addTask","name","post","isComplete","setCompleted","id","put","deleteTask","delete"],"sources":["D:/תמר תכנות/שנה ב/פרקטיקוד/ToDoListReact-master/src/service.js"],"sourcesContent":["import axios from 'axios';\n\n\naxios.defaults.baseURL='http://localhost:5059';\naxios.interceptors.request.use(function(config){\n  console.log(config);\n  return config;\n  },function(error){\n   console.log(error);\n  return Promise.reject(error);\n})\n;\n\nexport default {\n  getTasks: async () => {\n    const result = await axios.get(`/items`)    \n    return result.data;\n  },\n\n  addTask: async(name)=>{\n    \n    console.log('addTask', name);\n  \n    const result=await axios.post(`/addTodo`,{name,isComplete:false});\n\n    //TODO\n    return result.data;\n  },\n\n  // setCompleted: async(id, isComplete)=>{\n  //   console.log('setCompleted', {id, isComplete})\n  //   //TODO\n  //   await axios.put(`${apiUrl}/${id}?isComplete=${isComplete}`)\n    \n  // },\n  setCompleted:async(id,isComplete)=>{\n    console.log('setCompleted', {id, isComplete})\n    const result=await axios.put(`/addTodo/${id}?isComplete=${isComplete}`,{id,isComplete});\n    return result;\n  },\n\n  deleteTask:async(id)=>{\n    console.log('deleteTask')\n    const result=await axios.delete(`/deleteTodo/${id}`,id);\n    return result.data;\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzBA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAC,uBAAuB;AAC9CF,KAAK,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC,UAASC,MAAM,EAAC;EAC7CC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB,OAAOA,MAAM;AACb,CAAC,EAAC,UAASG,KAAK,EAAC;EAChBF,OAAO,CAACC,GAAG,CAACC,KAAK,CAAC;EACnB,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CAAC;AAGF,eAAe;EACbG,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMC,MAAM,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAE,QAAO,CAAC;IACxC,OAAOD,MAAM,CAACE,IAAI;EACpB,CAAC;EAEDC,OAAO,EAAE,MAAMC,IAAI,IAAG;IAEpBV,OAAO,CAACC,GAAG,CAAC,SAAS,EAAES,IAAI,CAAC;IAE5B,MAAMJ,MAAM,GAAC,MAAMb,KAAK,CAACkB,IAAI,CAAE,UAAS,EAAC;MAACD,IAAI;MAACE,UAAU,EAAC;IAAK,CAAC,CAAC;;IAEjE;IACA,OAAON,MAAM,CAACE,IAAI;EACpB,CAAC;EAED;EACA;EACA;EACA;;EAEA;EACAK,YAAY,EAAC,MAAAA,CAAMC,EAAE,EAACF,UAAU,KAAG;IACjCZ,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE;MAACa,EAAE;MAAEF;IAAU,CAAC,CAAC;IAC7C,MAAMN,MAAM,GAAC,MAAMb,KAAK,CAACsB,GAAG,CAAE,YAAWD,EAAG,eAAcF,UAAW,EAAC,EAAC;MAACE,EAAE;MAACF;IAAU,CAAC,CAAC;IACvF,OAAON,MAAM;EACf,CAAC;EAEDU,UAAU,EAAC,MAAMF,EAAE,IAAG;IACpBd,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IACzB,MAAMK,MAAM,GAAC,MAAMb,KAAK,CAACwB,MAAM,CAAE,eAAcH,EAAG,EAAC,EAACA,EAAE,CAAC;IACvD,OAAOR,MAAM,CAACE,IAAI;EACpB;AACF,CAAC"},"metadata":{},"sourceType":"module"}